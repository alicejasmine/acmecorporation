using System.Data;
using Dapper;
using Microsoft.Data.SqlClient;

namespace tests;

public class Helper
{
    public static readonly string ApiBaseUrl = "http://localhost:5000/api";
    private static readonly string ConnectionString = Environment.GetEnvironmentVariable("sqlconn")!;


    public static readonly string RebuildScript = $@"

USE [AcmeDB]; -- Replace with your actual database name

IF OBJECT_ID('dbo.DrawEntries', 'U') IS NOT NULL
    DROP TABLE dbo.DrawEntries;

IF OBJECT_ID('dbo.ProductSerialNumbers', 'U') IS NOT NULL
    DROP TABLE dbo.ProductSerialNumbers;

IF NOT EXISTS (SELECT 1 FROM sys.schemas WHERE name = 'dbo')
    EXEC('CREATE SCHEMA dbo;');


create table dbo.DrawEntries(
  entry_ID INT PRIMARY KEY IDENTITY(1,1),
    first_name NVARCHAR(50) NOT NULL,
    last_name NVARCHAR(50) NOT NULL,
    email_address NVARCHAR(255) NOT NULL,
    serial_number NVARCHAR(20) NOT NULL
);

CREATE TABLE dbo.ProductSerialNumbers (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    serial_number NVARCHAR(20) NOT NULL UNIQUE);

INSERT INTO dbo.ProductSerialNumbers (serial_number) VALUES
('XHMXCLGXBFSUU959WLLW'),
('AU30OTJJYZPIJ9NCPARL'),
('HGR3M7N1JZBXSSU5MNU7'),
('RCT97MN6OYW3TTNNKZMA'),
('5QW1SWFRIA4J8LK4BKWJ'),
('62N0NUUWBPKT2KTAVQG7'),
('W5JZH0L7G6JP086S5PQP'),
('PGTAD4SAGWNVQCS5V3SU'),
('BT49O9YBCBTIPQ0NS36U'),
('0VPE7ZK338Q15MU31L1W'),
('2DU26V7Q7ZQDBBXBNW23'),
('SJBOD7IWREGHKDTDJ91O'),
('GB6PSS9PX9W5L97LJ9Y0'),
('ZS6JYJVUH8TGEUV10X1P'),
('HJV28SMWHCI952DCO9NE'),
('NB4J3RSJNDEAQYZ8HCCS'),
('60JOVEJK8OSG7AM97TQB'),
('ENE681REUJ3888TKXJWV'),
('BMIVNUFR56P2VYEXSFA2'),
('ZQCT72UU0AC4OIY0Q8BJ'),
('09HGCKKHPCAZHIDD0R9E'),
('P8R73RNWHAY1L7I18VBF'),
('SCMKLLWJMOZIQ3XT3Z1V'),
('FKFB2K8MXRKOVBWQKDWA'),
('8SZPCAK6E7FES82BRX0G'),
('YZOTRLNKJ8CEGBFMY4LN'),
('ZILC4SDA84C91L7MTPO7'),
('897C67E0I9E985I4ODCS'),
('K66O1N0W1QIIDG8ZX92R'),
('6DC1IUHHYL02T09FCC45'),
('968XZBC5GDXP19P7KA7Z'),
('8WMG1SZ09Y8WCKO6OH4F'),
('KISQBGJO4V86QH1XM3NN'),
('3LZ6KTTLAMYGH1SJ5C3M'),
('MKOC42GVCO8Q0ZZCNH95'),
('6SWUO0T0GKUZBEIZLKLB'),
('KHI81OLWFEQ3A3YM7OBA'),
('HTT0DHX6QDIT7ZJ6X0XW'),
('0E87ON1J7VC58XK148TX'),
('RQU86SUKZZPSA9MCAZP9'),
('EUEQMC4MJOEYEMEV9LEF'),
('BGMTRG55539QN67TELKX'),
('GF6C83JQBJ3HV6PUCIKO'),
('ZKYOSFJBND6DLKWATYXG'),
('T0UBO4H8WVSHWOSFLITR'),
('W04LIXJ3U37NAUYY7N29'),
('U9XKU2B4WQTZ39AZF7GP'),
('MTEN1VRH79X8KJUYORMZ'),
('GR7CHGXWE9X1QSLYVPAG'),
('WX1HUSLYDPM97EQWEO18'),
('R1S12AV6PEDF8PF5XW6L'),
('TKV8MB95ZXAXE9MS0E30'),
('WIC5V6UD2JKYDU5DS5EJ'),
('WXRJ3JELE58ST8A1G4M8'),
('WM7ER2HTG3RV6THM3PRJ'),
('VD1V2DB79CWNZ1FIBBWO'),
('J1L5VHO4TQZ2U4DDQLQH'),
('GS50I2MONXE2CFNW9EE8'),
('JUYGC54BGRAVMNPKDGCR'),
('WLDQUP94ICDFPN5WHR7Z'),
('85WY9ELAU6B6KWU1XIG7'),
('A7E2CEOSB63YG6OUARNO'),
('9ZZJHWCLFIN9IWLPA4X3'),
('HGBJVHL0O3ZM6FD17CWL'),
('CAXSP01A7HJ5Q54UJ14E'),
('WR6CD1ITF057U18IX03H'),
('ZB8K1X0OBKAGDFG83D3R'),
('EVJKO34Y1H751D35OWRO'),
('IXW68XJ7HU79K6GDFS3R'),
('DBMXNRY2F0PW0YOIGYUZ'),
('VPJ61EEWNZTQ3ZFK6BFP'),
('Y4U3K6IQWT5EM9K82GLJ'),
('L31UF8EH73S5KF5CYHXH'),
('ZNLNDETYINUKH4PQWQ51'),
('OZFDTNB6J52JGUTYNQHI'),
('R1JSONN5DVSGGKTA5IEM'),
('PTIHDAS7GU4OI7GYMUL9'),
('PBI0FCF42SVS46PHZFG8'),
('B92MKI6ZF8HOFNECLXIQ'),
('T2B71ASMPSGD9ZJZQOJM'),
('T3Q87K6H204P2VPVT6BM'),
('GU13VCL0EZ3RCV5WXDHT'),
('390CKCT0O6L32UPTCZV2'),
('DMZ9HDYBXU9JAUPF9S2Q'),
('59CMYUKYI3AXB5F3MWZH'),
('WIPF9C40LUP2ERF9Z4NS'),
('NU5VVN37UGR7V0TYCA61'),
('FWMBM9U81YNBF9UMQAA7'),
('S01YUU7NHHSVE9VT2ERA'),
('F7H4FN27PYDEQN7FU26O'),
('U9GU2JGQS1CECA7P6E83'),
('JYM0GP7ZUTABWJNOUQNB'),
('3G7O5YLRGQ4W51R67A53'),
('TUCXEO9C6CQ93OQHBTTJ'),
('IYW4TKYDBQV58M3O8ZRE'),
('BMVQ2U7DNIL3E6TN99OX'),
('XUBJ1QMD5EE9XMPISVG0'),
('930E6CMYBWWSQBMSWQJV'),
('PP4PK1RYHBWX00D971D9'),
('J82AL60GX3UXXCNMK3SZ');
";


    static Helper()
    {
        if (string.IsNullOrEmpty(ConnectionString))
        {
            throw new Exception($@"The conn string sqlconn is empty.");
        }
    }

    public static void TriggerRebuild()
    {
        using (var conn = new SqlConnection(ConnectionString))

        {
            try
            {
                conn.Execute(RebuildScript);
            }
            catch (Exception e)
            {
                throw new Exception($"There was an error rebuilding the database.", e);
            }
        }
    }

    public static string GetConnectionString()
    {
        return ConnectionString;
    }
}